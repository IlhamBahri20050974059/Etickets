@model IEnumerable<Etickets.Models.movie>

@{
    ViewBag.Title = "Movie";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

    <h2>MOVIE</h2>
 @using (Html.BeginForm("Index", "Movie", FormMethod.Get, new { @class = "search-form" }))
 {
    <div class="form-group">
        <label for="search">Search movies:</label>
        <input type="text" name="search" value="@ViewBag.Search" class="form-control" />
    </div>
    <div class="form-group">
        <label for="genre">Filter by genre:</label>
        @Html.DropDownList("genre", ViewBag.Genres as SelectList, "All genres", new { @class = "form-control" })
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
 }


    <div class="card-deck">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <a href="@Url.Action("Details", new { id = item.Id })">
                        <img src="@Url.Content(item.ImageURL ?? "/")" class="card-img-top img-fluid" alt="Movie Image">
                    </a>
                    <div class="card-body">
                        <h6 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h6>
                        <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-primary">Details</a>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav>
        <ul class="pagination justify-content-center">
            @{
                int totalPage = (int)Math.Ceiling((double)Model.Count() / 3);
                int currentPage = ViewBag.Page ?? 1;
                int startPage = Math.Max(currentPage - 2, 1);
                int endPage = Math.Min(currentPage + 2, totalPage);
            }
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Movie", new { page = currentPage - 1 })">Previous</a>
                </li>
            }
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Movie", new { page = i })">@i</a>
                </li>
            }
            @if (currentPage < totalPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Movie", new { page = currentPage + 1 })">Next</a>
                </li>
            }
        </ul>
    </nav>


