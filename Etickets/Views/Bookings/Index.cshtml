@model IEnumerable<Etickets.Models.Booking>

@{
    ViewBag.Title = "Booking";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int totalPages = (int)Math.Ceiling((decimal)Model.Count() / 10);
    int currentPage = ViewBag.PageNumber ?? 1;
    string searchString = ViewBag.SearchString ?? "";
}
  

    <p>
        <button class="button-report" onclick="location.href='Bookings/Report'">Report</button>
        <button class="button-create" onclick="location.href='Bookings/Create'">Create</button>
    </p>
    @using (Html.BeginForm("Index", "Bookings", FormMethod.Post))
    {
        <div class="form-group">
            <input type="text" name="searchString" class="form-control search-input" placeholder="Search...">
        </div>
        <button type="submit" class="btn btn-primary">Search</button>
    }
    <table class="table" border="1">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                Id User
            </th>
            <th>
                Movie Name
            </th>
            <th>
                Booking Date
            </th>
            <th>
                Film Time
            </th>
            <th>
                Room
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seat)
            </th>
            <th>
                Status
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookingMovie.movie.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookingDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookingMovie.Time)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookingMovie.Room)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Seat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if (item.Status == 0)
                    {
                        <p>Unpaid</p>
                    }
                    else {
                        <p>Paid</p>
                    }
                </td>
                <td>
                    <button class="button-edit" onclick="location.href='Bookings/Edit?id=@item.Id'">Edit</button>
                    <button class="button-details" onclick="location.href='Bookings/Details?id=@item.Id'">Details</button>
                    <button class="button-delete" onclick="location.href='Bookings/Delete?id=@item.Id'">Delete</button>
                </td>
            </tr>
        }

    </table>

    <!-- Pagination links -->
    <div class="pagination-container">
        <div class="pagination">
            <ul>
                <li class="previous @(currentPage == 1 ? "disabled" : "")"><a href="@Url.Action("Index", new { pageNumber = currentPage - 1, searchString = searchString })">Prev</a></li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="@(i == currentPage ? "active" : "")"><a href="@Url.Action("Index", new { pageNumber = i, searchString = searchString })">@i</a></li>
                }
                <li class="next @(currentPage == totalPages ? "disabled" : "")"><a href="@Url.Action("Index", new { pageNumber = currentPage + 1, searchString = searchString })">Next</a></li>
            </ul>
        </div>
        <div class="pagination-info">
            <p>Total Items: @Model.Count()</p>
            <form method="get" action="@Url.Action("Index")">
                <input type="hidden" name="searchString" value="@searchString" />
                <input type="number" name="pageNumber" min="1" max="@totalPages" value="@currentPage" />
                <input type="submit" value="Go" />
            </form>
        </div>
    </div>
    </div>
    <script>

    </script>

